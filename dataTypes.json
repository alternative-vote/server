// There are no required fields (other than id, which is generated by the server). Everything has defaults.  Nothing can be null.
-- election --
{
  "id": "123-456", // guid
  "owner": "344-432",
  "name": "LogRhythm Hackathon", //not required, "" is allowed
  "status": "edit" // or "active" or "complete"
  "permissions": {   // permissions this way should be extentable for the future.  for now, just take pub/pub, or private private
    "voting": "private", //default to public
    "results": "private", //default to public
  },
  "start" : {
    "manual": true,
    "date": "12-02-01:1231231"
  },
  "stop": {
    "manual": false,
    "date": "12-09-01:1231231" //date can have a value, even if manual is true, server should set defaults
  },
  "liveResults": false, //defaults to false
  "multipleCategories": false, //defaults to false
  "candidates": [{},{}],
  "categories": [
    {
      "name": "shippable",
      "candidates": ["123-456", "456-789"], //ids of candidates that are associated with this category*
      "ballots": [{},{}] //array of ballots
    },
    {
      "name": "most-meow-worthy",
      "ballots": [{},{}] //array of ballots
    },
    {
      "name": "best-internal-tool",
      "ballots": [{},{}] //array of ballots
    }
    ]
}

 *If multipleCategories == false, destroy all categories and make a single one category,
  then add all candidate Ids to the candidates property of that category.
  If multipleCategories == true, server should do nothing, and lauch election with whatever
  the client set.  The election may be in a invalid state for launch (ie: no categories) which should probably
  be a 409 (Conflict) error.

 - launch election endpoint: /elections/:id:/actions/launch

-- category --
{
  "name": "best-internal-tool",
  "ballots": [{},{}] //array of ballots
}

-- person --
{
  "id": "567-789",
  "name": "Brutus Cat"
}

-- candidate --
{
  "id": "123-456",
  "name": "Meow-Map Threat Detector",
  "description": "It's like threat map, but with cats.",
  "persons": ["brutus.cat"]
}

-- ballot --
{
  "id": "123-456",
  "person": "567-789",
  "votes": [{}, {}] //array of candidates
}


//admin stuff for setting up election
POST /elections
POST /elections/:id/candidates (this should take a array of candidate objects.  if successfull, return back the same info, but with guids added)
POST /elections/:id/categories

//end points ui needs
GET /elections/:id
POST /elections/:id/categories/:id/ballots

//final results
GET /elections/:id/actions/results


{
  "123-456": {
     "id": "123-456",
     "name": "something",
     "":
  }
}
